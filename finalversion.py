# -*- coding: utf-8 -*-
"""FinalVersion.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YHJq9xh50ggBzBoP_fe_9ADJ50P-ixOp
"""

!apt install libzbar0
!pip install pyzbar

from google.colab import drive
drive.mount('/content/drive')

#import the libraries
import os
os.environ["TF_CPP_MIN_LOG_LEVEL"] = "2"
import tensorflow as tf
from tensorflow import keras
from keras.layers import Dense, Flatten, Conv2D, MaxPooling2D, Dropout
from tensorflow.keras import layers
from tensorflow.keras.utils import to_categorical
from tensorflow.keras.preprocessing.image import ImageDataGenerator
import cv2
import numpy as np
import matplotlib.pyplot as plt 
from IPython.display import Image, display 
from pyzbar.pyzbar import decode
import keras
from PIL import Image, ImageOps


plt.style.use('fivethirtyeight')

print("Num GPUs Available: ", len(tf.config.list_physical_devices('GPU')))
print('Keras version:', tf.keras.__version__)
print('Tensorflow version:',tf.__version__)

img = cv2.imread("/content/drive/MyDrive/15122021090430-0072.tif")

code = decode(img)
print(code)

rows, columns, _ = img.shape
print("rows :",rows)
print("columns :",columns)

plt.imshow(img)

cut_img_qr = img[496: 698, 1377: 1579]
plt.imshow(cut_img_qr)

cut_img_mc = img[496-24: 698+24, 1377+212: 1377+202+660]
plt.imshow(cut_img_mc)

num_list = []
rect_list = []
for barcode in decode(img):
  print(barcode.rect)
  MyData = barcode.data.decode('utf-8')
  print(MyData)
  num_list.append(MyData)
  rect_list.append(barcode.rect)

print(num_list)
print(rect_list)

cut_img_mc_list = []
for y in range(0, len(rect_list)):
  cut_img_y = img[rect_list[y].top - 24: rect_list[y].top + 226, rect_list[y].left + 212: rect_list[y].left + 862]
  cut_img_mc_list.append(cut_img_y)

model = keras.models.load_model('/content/drive/MyDrive/mc_model.h5')

result = {}
for index, img in enumerate(cut_img_mc_list):
  data = np.ndarray(shape=(1, 224, 224, 3), dtype=np.float32)

  img = cv2.cvtColor(cv2.resize(img, (224,224)), cv2.COLOR_BGR2RGB)
  image = Image.fromarray(img)

  size = (224, 224)
  image = ImageOps.fit(image, size, Image.ANTIALIAS)

  image_array = np.asarray(image)

  normalized_image_array = (image_array.astype(np.float32) / 127.0) - 1

  data[0] = normalized_image_array

  prediction = model.predict(data)
  pd = np.array(prediction).tolist()
  categories = ['A','B','C','D']
  result[int(num_list[index])] = categories[pd[0].index(prediction.max())]
sresult = {}
for i in sorted(result):
  sresult[i] = result[i]
print(sresult)